<ac:structured-macro ac:name="info">
 <ac:rich-text-body>
<ac:structured-macro ac:name="expand">
  <ac:parameter ac:name="title">Content information...</ac:parameter>
  <ac:rich-text-body>
      <h4>Contents</h4>
      <p>Alternative terms:</p>
      <ul>
        <li>Dynamic view</li>
        <li>Process view</li>
        <li>Workflow view</li>
      </ul>
      <p>This view describes the behavior and interaction of the system’s building blocks as runtime elements (processes, tasks, activities, threads, …).</p>
      <p>Select interesting runtime scenarios such as:</p>
      <ul>
        <li>How are the most important use cases executed by the architectural building blocks?</li>
        <li>Which instances of architectural building blocks are created at runtime and how are they started, controlled, and stopped.</li>
        <li>How do the system’s components co-operate with external and pre-existing components?</li>
        <li>How is the system started (covering e.g. required start scripts, dependencies on external systems, databases, communications systems, etc.)?</li>
      </ul>
      <p> </p>
      <p>Note: The main criterion for the choice of possible scenarios (sequences, workflows) is their <em>architectural relevancy</em>. It is <u>not</u> important to describe a large number of scenarios. You should rather document a <u>representative</u> selection.</p>
      <p>Candidates are:</p>
    <div style="margin-left: 30.0px;">
      <p>1.The top 3 – 5 use cases</p>
      <p>2.System startup</p>
      <p>3.The system’s behavior on its most important external interfaces</p>
      <p>4.The system’s behavior in the most important error situations</p>
    </div>

      <h4>Motivation</h4>
      <p>Esp. for object-oriented architectures it is not sufficient to specify the building blocks with their interfaces, but also how instances of building blocks interact during runtime.</p>
      <p>This view explains how the blocks interact, how they provide their functionality, how the systems works.</p>
      
      <h4>Form</h4>
      <p>Document the chosen scenarios using UML sequence diagrams, activity diagrams or communications diagrams. Enumerated lists are sometimes feasible.</p>
      <p>Using object diagrams you can depict snapshots of existing runtime objects as well as instantiated relationships. The UML allows to distinguish between active and passive objects.</p>
  </ac:rich-text-body>
    </ac:structured-macro>
  </ac:rich-text-body>
</ac:structured-macro>